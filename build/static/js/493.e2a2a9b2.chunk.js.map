{"version":3,"file":"static/js/493.e2a2a9b2.chunk.js","mappings":"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","sources":["../node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js","../node_modules/@bedrock-layout/use-forwarded-ref/lib/index.m.js","../node_modules/@bedrock-layout/use-stateful-ref/lib/index.m.js","../node_modules/react-responsive-modal/src/CloseIcon.tsx","../node_modules/react-responsive-modal/src/utils.ts","../node_modules/react-responsive-modal/src/lib/focusTrapJs.ts","../node_modules/react-responsive-modal/src/FocusTrap.tsx","../node_modules/react-responsive-modal/src/modalManager.ts","../node_modules/react-responsive-modal/src/useScrollLock.ts","../node_modules/react-responsive-modal/src/index.tsx","jsx/pages/Login.js"],"sourcesContent":["function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// Older browsers don't support event options, feature detect it.\n\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\nvar hasPassiveEvents = false;\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\n\n\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPaddingRight = void 0;\n\n// returns true if `el` should be allowed to receive touchmove events.\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event;\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true;\n  }\n\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true;\n\n  if (e.preventDefault) e.preventDefault();\n\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = scrollBarGap + 'px';\n    }\n  }\n\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight;\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting;\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nexport var disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = true;\n    }\n  } else {\n    setOverflowHidden(options);\n  }\n};\n\nexport var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n\n    // Reset initial clientY.\n    initialClientY = -1;\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\n\nexport var enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n  } else if (!locks.length) {\n    restoreOverflowSetting();\n  }\n};\n\n","import { useStatefulRef as r } from \"@bedrock-layout/use-stateful-ref\";\nimport s, { useRef as c } from \"react\";\nfunction o(t, u = { isStateful: !0 }) {\n  const n = r(null), f = c(null), e = u.isStateful ? n : f;\n  return s.useEffect(() => {\n    !t || (typeof t == \"function\" ? t(e.current) : t.current = e.current);\n  }), e;\n}\nexport {\n  o as default,\n  o as useForwardedRef\n};\n","import u from \"react\";\nfunction s(c = null) {\n  let [e, f] = u.useState(c);\n  const { current: r } = u.useRef({\n    current: e\n  });\n  return Object.defineProperty(r, \"current\", {\n    get: () => e,\n    set: (t) => {\n      Object.is(e, t) || (e = t, f(t));\n    }\n  }), r;\n}\nexport {\n  s as default,\n  s as useStatefulRef\n};\n","import React from 'react';\nimport cx from 'classnames';\n\ninterface CloseIconProps {\n  id?: string;\n  closeIcon?: React.ReactNode;\n  styles?: {\n    closeButton?: React.CSSProperties;\n    closeIcon?: React.CSSProperties;\n  };\n  classNames?: {\n    closeButton?: string;\n    closeIcon?: string;\n  };\n  classes: {\n    closeButton?: string;\n  };\n  onClick: () => void;\n}\n\nconst CloseIcon = ({\n  classes,\n  classNames,\n  styles,\n  id,\n  closeIcon,\n  onClick,\n}: CloseIconProps) => (\n  <button\n    id={id}\n    className={cx(classes.closeButton, classNames?.closeButton)}\n    style={styles?.closeButton}\n    onClick={onClick}\n    data-testid=\"close-button\"\n  >\n    {closeIcon ? (\n      closeIcon\n    ) : (\n      <svg\n        className={classNames?.closeIcon}\n        style={styles?.closeIcon}\n        width={28}\n        height={28}\n        viewBox=\"0 0 36 36\"\n        data-testid=\"close-icon\"\n      >\n        <path d=\"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\" />\n      </svg>\n    )}\n  </button>\n);\n\nexport default CloseIcon;\n","export const isBrowser = typeof window !== 'undefined';\n","// https://github.com/alexandrzavalii/focus-trap-js/blob/master/src/index.js v1.1.0\n\nexport const candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n];\n\nfunction isHidden(node: any) {\n  // offsetParent being null will allow detecting cases where an element is invisible or inside an invisible element,\n  // as long as the element does not use position: fixed. For them, their visibility has to be checked directly as well.\n  return (\n    node.offsetParent === null || getComputedStyle(node).visibility === 'hidden'\n  );\n}\n\nfunction getCheckedRadio(nodes: any, form: any) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n}\n\nfunction isNotRadioOrTabbableRadio(node: any) {\n  if (node.tagName !== 'INPUT' || node.type !== 'radio' || !node.name) {\n    return true;\n  }\n  var radioScope = node.form || node.ownerDocument;\n  var radioSet = radioScope.querySelectorAll(\n    'input[type=\"radio\"][name=\"' + node.name + '\"]'\n  );\n  var checked = getCheckedRadio(radioSet, node.form);\n  return checked === node || (checked === undefined && radioSet[0] === node);\n}\n\nexport function getAllTabbingElements(parentElem: any) {\n  var currentActiveElement = document.activeElement;\n  var tabbableNodes = parentElem.querySelectorAll(candidateSelectors.join(','));\n  var onlyTabbable = [];\n  for (var i = 0; i < tabbableNodes.length; i++) {\n    var node = tabbableNodes[i];\n    if (\n      currentActiveElement === node ||\n      (!node.disabled &&\n        getTabindex(node) > -1 &&\n        !isHidden(node) &&\n        isNotRadioOrTabbableRadio(node))\n    ) {\n      onlyTabbable.push(node);\n    }\n  }\n  return onlyTabbable;\n}\n\nexport function tabTrappingKey(event: any, parentElem: any) {\n  // check if current event keyCode is tab\n  if (!event || event.key !== 'Tab') return;\n\n  if (!parentElem || !parentElem.contains) {\n    if (process && process.env.NODE_ENV === 'development') {\n      console.warn('focus-trap-js: parent element is not defined');\n    }\n    return false;\n  }\n\n  if (!parentElem.contains(event.target)) {\n    return false;\n  }\n\n  var allTabbingElements = getAllTabbingElements(parentElem);\n  var firstFocusableElement = allTabbingElements[0];\n  var lastFocusableElement = allTabbingElements[allTabbingElements.length - 1];\n\n  if (event.shiftKey && event.target === firstFocusableElement) {\n    lastFocusableElement.focus();\n    event.preventDefault();\n    return true;\n  } else if (!event.shiftKey && event.target === lastFocusableElement) {\n    firstFocusableElement.focus();\n    event.preventDefault();\n    return true;\n  }\n  return false;\n}\n\nfunction getTabindex(node: any) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n\n  if (!isNaN(tabindexAttr)) return tabindexAttr;\n  // Browsers do not return tabIndex correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n\n  if (isContentEditable(node)) return 0;\n  return node.tabIndex;\n}\n\nfunction isContentEditable(node: any) {\n  return node.getAttribute('contentEditable');\n}\n","import { useEffect, useRef } from 'react';\nimport { isBrowser } from './utils';\nimport {\n  tabTrappingKey,\n  candidateSelectors,\n  getAllTabbingElements,\n} from './lib/focusTrapJs';\n\ninterface FocusTrapProps {\n  container?: React.RefObject<HTMLElement> | null;\n  initialFocusRef?: React.RefObject<HTMLElement>;\n}\n\nexport const FocusTrap = ({ container, initialFocusRef }: FocusTrapProps) => {\n  const refLastFocus = useRef<HTMLElement | null>();\n  /**\n   * Handle focus lock on the modal\n   */\n  useEffect(() => {\n    const handleKeyEvent = (event: KeyboardEvent) => {\n      if (container?.current) {\n        tabTrappingKey(event, container.current);\n      }\n    };\n\n    if (isBrowser) {\n      document.addEventListener('keydown', handleKeyEvent);\n    }\n    // On mount we focus on the first focusable element in the modal if there is one\n    if (isBrowser && container?.current) {\n      const savePreviousFocus = () => {\n        // First we save the last focused element\n        // only if it's a focusable element\n        if (\n          candidateSelectors.findIndex((selector) =>\n            document.activeElement?.matches(selector)\n          ) !== -1\n        ) {\n          refLastFocus.current = document.activeElement as HTMLElement;\n        }\n      };\n\n      if (initialFocusRef) {\n        savePreviousFocus();\n        // We need to schedule focusing on a next frame - this allows to focus on the modal root\n        requestAnimationFrame(() => {\n          initialFocusRef.current?.focus();\n        });\n      } else {\n        const allTabbingElements = getAllTabbingElements(container.current);\n        if (allTabbingElements[0]) {\n          savePreviousFocus();\n          allTabbingElements[0].focus();\n        }\n      }\n    }\n    return () => {\n      if (isBrowser) {\n        document.removeEventListener('keydown', handleKeyEvent);\n        // On unmount we restore the focus to the last focused element\n        refLastFocus.current?.focus();\n      }\n    };\n  }, [container, initialFocusRef]);\n\n  return null;\n};\n","import { Ref, useEffect } from 'react';\n\nlet modals: Ref<Element>[] = [];\n\n/**\n * Handle the order of the modals.\n * Inspired by the material-ui implementation.\n */\nexport const modalManager = {\n  /**\n   * Register a new modal\n   */\n  add: (newModal: Ref<Element>) => {\n    modals.push(newModal);\n  },\n\n  /**\n   * Remove a modal\n   */\n  remove: (oldModal: Ref<Element>) => {\n    modals = modals.filter((modal) => modal !== oldModal);\n  },\n\n  /**\n   * When multiple modals are rendered will return true if current modal is the last one\n   */\n  isTopModal: (modal: Ref<Element>) =>\n    !!modals.length && modals[modals.length - 1] === modal,\n};\n\nexport function useModalManager(ref: Ref<Element>, open: boolean) {\n  useEffect(() => {\n    if (open) {\n      modalManager.add(ref);\n    }\n    return () => {\n      modalManager.remove(ref);\n    };\n  }, [open, ref]);\n}\n","import { useEffect, useRef } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\nexport const useScrollLock = (\n  refModal: React.RefObject<Element>,\n  open: boolean,\n  showPortal: boolean,\n  blockScroll: boolean,\n  reserveScrollBarGap?: boolean\n) => {\n  const oldRef = useRef<Element | null>(null);\n\n  useEffect(() => {\n    if (open && refModal.current && blockScroll) {\n      oldRef.current = refModal.current;\n      disableBodyScroll(refModal.current, { reserveScrollBarGap });\n    }\n    return () => {\n      if (oldRef.current) {\n        enableBodyScroll(oldRef.current);\n        oldRef.current = null;\n      }\n    };\n  }, [open, showPortal, refModal, blockScroll, reserveScrollBarGap]);\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDom from 'react-dom';\nimport cx from 'classnames';\nimport CloseIcon from './CloseIcon';\nimport { FocusTrap } from './FocusTrap';\nimport { modalManager, useModalManager } from './modalManager';\nimport { useScrollLock } from './useScrollLock';\nimport { isBrowser } from './utils';\nimport useForwardedRef from '@bedrock-layout/use-forwarded-ref';\n\nconst classes = {\n  root: 'react-responsive-modal-root',\n  overlay: 'react-responsive-modal-overlay',\n  overlayAnimationIn: 'react-responsive-modal-overlay-in',\n  overlayAnimationOut: 'react-responsive-modal-overlay-out',\n  modalContainer: 'react-responsive-modal-container',\n  modalContainerCenter: 'react-responsive-modal-containerCenter',\n  modal: 'react-responsive-modal-modal',\n  modalAnimationIn: 'react-responsive-modal-modal-in',\n  modalAnimationOut: 'react-responsive-modal-modal-out',\n  closeButton: 'react-responsive-modal-closeButton',\n};\n\nexport interface ModalProps {\n  /**\n   * Control if the modal is open or not.\n   */\n  open: boolean;\n  /**\n   * Should the dialog be centered.\n   *\n   * Default to false.\n   */\n  center?: boolean;\n  /**\n   * Is the modal closable when user press esc key.\n   *\n   * Default to true.\n   */\n  closeOnEsc?: boolean;\n  /**\n   * Is the modal closable when user click on overlay.\n   *\n   * Default to true.\n   */\n  closeOnOverlayClick?: boolean;\n  /**\n   * Whether to block scrolling when dialog is open.\n   *\n   * Default to true.\n   */\n  blockScroll?: boolean;\n  /**\n   * Show the close icon.\n   *\n   * Default to true.\n   */\n  showCloseIcon?: boolean;\n  /**\n   * id attribute for the close icon button.\n   */\n  closeIconId?: string;\n  /**\n   * Custom icon to render (svg, img, etc...).\n   */\n  closeIcon?: React.ReactNode;\n  /**\n   * When the modal is open, trap focus within it.\n   *\n   * Default to true.\n   */\n  focusTrapped?: boolean;\n  /**\n   * Element to focus when focus trap is used.\n   *\n   * Default to undefined.\n   */\n  initialFocusRef?: React.RefObject<HTMLElement>;\n  /**\n   * You can specify a container prop which should be of type `Element`.\n   * The portal will be rendered inside that element.\n   * The default behavior will create a div node and render it at the at the end of document.body.\n   */\n  container?: Element | null;\n  /**\n   * An object containing classNames to style the modal.\n   */\n  classNames?: {\n    root?: string;\n    overlay?: string;\n    overlayAnimationIn?: string;\n    overlayAnimationOut?: string;\n    modalContainer?: string;\n    modal?: string;\n    modalAnimationIn?: string;\n    modalAnimationOut?: string;\n    closeButton?: string;\n    closeIcon?: string;\n  };\n  /**\n   * An object containing the styles objects to style the modal.\n   */\n  styles?: {\n    root?: React.CSSProperties;\n    overlay?: React.CSSProperties;\n    modalContainer?: React.CSSProperties;\n    modal?: React.CSSProperties;\n    closeButton?: React.CSSProperties;\n    closeIcon?: React.CSSProperties;\n  };\n  /**\n   * Animation duration in milliseconds.\n   *\n   * Default to 300.\n   */\n  animationDuration?: number;\n  /**\n   * ARIA role for modal\n   *\n   * Default to 'dialog'.\n   */\n  role?: string;\n  /**\n   * ARIA label for modal\n   */\n  ariaLabelledby?: string;\n  /**\n   * ARIA description for modal\n   */\n  ariaDescribedby?: string;\n  /**\n   * Avoid unpleasant flickering effect when body overflow is hidden. For more information see https://www.npmjs.com/package/body-scroll-lock\n   */\n  reserveScrollBarGap?: boolean;\n  /**\n   * id attribute for modal container\n   */\n  containerId?: string;\n  /**\n   * id attribute for modal\n   */\n  modalId?: string;\n  /**\n   * Callback fired when the Modal is requested to be closed by a click on the overlay or when user press esc key.\n   */\n  onClose: () => void;\n  /**\n   * Callback fired when the escape key is pressed.\n   */\n  onEscKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Callback fired when the overlay is clicked.\n   */\n  onOverlayClick?: (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => void;\n  /**\n   * Callback fired when the Modal has exited and the animation is finished.\n   */\n  onAnimationEnd?: () => void;\n  children?: React.ReactNode;\n}\n\nexport const Modal = React.forwardRef(\n  (\n    {\n      open,\n      center,\n      blockScroll = true,\n      closeOnEsc = true,\n      closeOnOverlayClick = true,\n      container,\n      showCloseIcon = true,\n      closeIconId,\n      closeIcon,\n      focusTrapped = true,\n      initialFocusRef = undefined,\n      animationDuration = 300,\n      classNames,\n      styles,\n      role = 'dialog',\n      ariaDescribedby,\n      ariaLabelledby,\n      containerId,\n      modalId,\n      onClose,\n      onEscKeyDown,\n      onOverlayClick,\n      onAnimationEnd,\n      children,\n      reserveScrollBarGap,\n    }: ModalProps,\n    ref: React.ForwardedRef<HTMLDivElement>\n  ) => {\n    const refDialog = useForwardedRef(ref);\n    const refModal = useRef<HTMLDivElement>(null);\n    const refShouldClose = useRef<boolean | null>(null);\n    const refContainer = useRef<HTMLDivElement | null>(null);\n    // Lazily create the ref instance\n    // https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily\n    if (refContainer.current === null && isBrowser) {\n      refContainer.current = document.createElement('div');\n    }\n\n    // The value should be false for srr, that way when the component is hydrated client side,\n    // it will match the server rendered content\n    const [showPortal, setShowPortal] = useState(false);\n\n    // Hook used to manage multiple modals opened at the same time\n    useModalManager(refModal, open);\n\n    // Hook used to manage the scroll\n    useScrollLock(refModal, open, showPortal, blockScroll, reserveScrollBarGap);\n\n    const handleOpen = () => {\n      if (\n        refContainer.current &&\n        !container &&\n        !document.body.contains(refContainer.current)\n      ) {\n        document.body.appendChild(refContainer.current);\n      }\n\n      document.addEventListener('keydown', handleKeydown);\n    };\n\n    const handleClose = () => {\n      if (\n        refContainer.current &&\n        !container &&\n        document.body.contains(refContainer.current)\n      ) {\n        document.body.removeChild(refContainer.current);\n      }\n      document.removeEventListener('keydown', handleKeydown);\n    };\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      // Only the last modal need to be escaped when pressing the esc key\n      if (event.keyCode !== 27 || !modalManager.isTopModal(refModal)) {\n        return;\n      }\n\n      onEscKeyDown?.(event);\n\n      if (closeOnEsc) {\n        onClose();\n      }\n    };\n\n    useEffect(() => {\n      return () => {\n        if (showPortal) {\n          // When the modal is closed or removed directly, cleanup the listeners\n          handleClose();\n        }\n      };\n    }, [showPortal]);\n\n    useEffect(() => {\n      // If the open prop is changing, we need to open the modal\n      // This is also called on the first render if the open prop is true when the modal is created\n      if (open && !showPortal) {\n        setShowPortal(true);\n        handleOpen();\n      }\n    }, [open]);\n\n    const handleClickOverlay = (\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      if (refShouldClose.current === null) {\n        refShouldClose.current = true;\n      }\n\n      if (!refShouldClose.current) {\n        refShouldClose.current = null;\n        return;\n      }\n\n      onOverlayClick?.(event);\n\n      if (closeOnOverlayClick) {\n        onClose();\n      }\n\n      refShouldClose.current = null;\n    };\n\n    const handleModalEvent = () => {\n      refShouldClose.current = false;\n    };\n\n    const handleAnimationEnd = () => {\n      if (!open) {\n        setShowPortal(false);\n      }\n\n      onAnimationEnd?.();\n    };\n\n    const containerModal = container || refContainer.current;\n\n    const overlayAnimation = open\n      ? classNames?.overlayAnimationIn ?? classes.overlayAnimationIn\n      : classNames?.overlayAnimationOut ?? classes.overlayAnimationOut;\n\n    const modalAnimation = open\n      ? classNames?.modalAnimationIn ?? classes.modalAnimationIn\n      : classNames?.modalAnimationOut ?? classes.modalAnimationOut;\n\n    return showPortal && containerModal\n      ? ReactDom.createPortal(\n          <div\n            className={cx(classes.root, classNames?.root)}\n            style={styles?.root}\n            data-testid=\"root\"\n          >\n            <div\n              className={cx(classes.overlay, classNames?.overlay)}\n              data-testid=\"overlay\"\n              aria-hidden={true}\n              style={{\n                animation: `${overlayAnimation} ${animationDuration}ms`,\n                ...styles?.overlay,\n              }}\n            />\n            <div\n              ref={refModal}\n              id={containerId}\n              className={cx(\n                classes.modalContainer,\n                center && classes.modalContainerCenter,\n                classNames?.modalContainer\n              )}\n              style={styles?.modalContainer}\n              data-testid=\"modal-container\"\n              onClick={handleClickOverlay}\n            >\n              <div\n                ref={refDialog}\n                className={cx(classes.modal, classNames?.modal)}\n                style={{\n                  animation: `${modalAnimation} ${animationDuration}ms`,\n                  ...styles?.modal,\n                }}\n                onMouseDown={handleModalEvent}\n                onMouseUp={handleModalEvent}\n                onClick={handleModalEvent}\n                onAnimationEnd={handleAnimationEnd}\n                id={modalId}\n                role={role}\n                aria-modal=\"true\"\n                aria-labelledby={ariaLabelledby}\n                aria-describedby={ariaDescribedby}\n                data-testid=\"modal\"\n                tabIndex={-1}\n              >\n                {focusTrapped && (\n                  <FocusTrap\n                    container={refDialog}\n                    initialFocusRef={initialFocusRef}\n                  />\n                )}\n                {children}\n                {showCloseIcon && (\n                  <CloseIcon\n                    classes={classes}\n                    classNames={classNames}\n                    styles={styles}\n                    closeIcon={closeIcon}\n                    onClick={onClose}\n                    id={closeIconId}\n                  />\n                )}\n              </div>\n            </div>\n          </div>,\n          containerModal\n        )\n      : null;\n  }\n);\n\nexport default Modal;\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  loadingToggleAction,\r\n  loginAction,\r\n} from \"../../store/actions/AuthActions\";\r\nimport { FaEye } from \"react-icons/fa\";\r\n// image\r\n\r\nimport BgImage from \"../../images/bg1.png\";\r\nimport logo from \"../../images/logo-full.png\";\r\nimport logolight from \"../../images/logo-white.png\";\r\nimport pol from \"../../images/pol.jpg\";\r\nimport careLogo from \"../../images/activity-img/logo7.png\";\r\nimport { FaEyeSlash } from \"react-icons/fa\";\r\nimport Modal from \"react-responsive-modal\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport fetchData from \"../../axios\";\r\n\r\nfunction Login(props) {\r\n  const Ref = useRef();\r\n  const navRef = useRef();\r\n  const [activeSubmit, setActiveSubmit] = useState(true);\r\n  let errorsObj = { email: \"\", password: \"\" };\r\n  const [errors, setErrors] = useState(errorsObj);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [superAdmin, setSuperAdmin] = useState(true);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [timer, setTimer] = useState(\"00:00:45\");\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const makeRequest = fetchData();\r\n  function onLogin(e) {\r\n    e.preventDefault();\r\n    let error = false;\r\n    const errorObj = { ...errorsObj };\r\n    if (email === \"\") {\r\n      errorObj.email = \"Email is Required\";\r\n      error = true;\r\n    }\r\n    if (password === \"\") {\r\n      errorObj.password = \"Password is Required\";\r\n      error = true;\r\n    }\r\n    setErrors(errorObj);\r\n    if (error) {\r\n      return;\r\n    }\r\n\r\n    let url = \"\";\r\n    if (!superAdmin) {\r\n      url = \"/auth/login\";\r\n    } else {\r\n      url = \"/sub-admin/login\";\r\n    }\r\n    dispatch(loadingToggleAction(true));\r\n    dispatch(loginAction(url, email, password, navigate));\r\n  }\r\n  const [timerValue, setTimerValue] = useState({ seconds: 45 });\r\n\r\n  function getTimeRemaining(e) {\r\n    const total = Date.parse(e) - Date.parse(new Date());\r\n    const hour = Math.floor((total / (1000 * 60 * 60)) % 24);\r\n    const seconds = Math.floor((total / 1000) % 60);\r\n    const minute = Math.floor((total / (1000 * 60)) % 60);\r\n    setTimerValue((prev) => {\r\n      console.log(prev);\r\n      return { seconds: --prev.seconds };\r\n    });\r\n    return { total, hour, minute, seconds };\r\n  }\r\n\r\n  function startTimer(e) {\r\n    let { total, hour, minute, seconds } = getTimeRemaining(e);\r\n    if (total >= 0) {\r\n      setTimer(\r\n        (hour > 9 ? hour : \"0\" + hour) +\r\n          \":\" +\r\n          (minute > 9 ? minute : \"0\" + minute) +\r\n          \":\" +\r\n          (seconds > 9 ? seconds : \"0\" + seconds)\r\n      );\r\n    } else {\r\n      if (activeSubmit == true) {\r\n        setActiveSubmit(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  function clearTimer(e) {\r\n    setTimer(\"00:00:60\");\r\n    if (Ref.current) {\r\n      clearInterval(Ref.current);\r\n    }\r\n\r\n    const id = setInterval(() => {\r\n      startTimer(e);\r\n    }, 1000);\r\n    Ref.current = id;\r\n  }\r\n\r\n  function getDeadTime() {\r\n    let deadline = new Date();\r\n    deadline.setSeconds(deadline.getSeconds() + 45);\r\n    return deadline;\r\n  }\r\n\r\n  function Reset() {\r\n    // clearTimer(getDeadTime());\r\n  }\r\n\r\n  function resend(event) {\r\n    event?.preventDefault();\r\n    makeRequest(\"PATCH\", \"/auth/resend-otp\", { email })\r\n      .then(() => {\r\n        Reset();\r\n        setTimerValue({ seconds: 45 });\r\n        setActiveSubmit(true);\r\n        toast.success(\"A new OTP send to your email\");\r\n      })\r\n      .catch((error) => {\r\n        toast(error.data.errors[0].error);\r\n      });\r\n  }\r\n  const handleOtp = (event) => {\r\n    event.persist();\r\n    event.preventDefault();\r\n    makeRequest(\"POST\", \"/auth/validate-otp\", {\r\n      email,\r\n      otp: otp,\r\n    })\r\n      .then((res) => {\r\n        toast(\"OTP is Accepted\");\r\n        localStorage.setItem(\"adminEmail\", email);\r\n        setTimeout(() => {\r\n          navRef?.current?.click();\r\n        }, 100);\r\n        // window.location.href = \"/reset-password\";\r\n      })\r\n      .catch((err) => {\r\n        toast(\"OTP is Incorrect\");\r\n      });\r\n    console.log(otp);\r\n  };\r\n\r\n  const element = document.querySelector(\"body\");\r\n  let dataTheme = element.getAttribute(\"data-theme-version\");\r\n  const onOpenModal = () => {\r\n    setOpen((prev) => !prev);\r\n  };\r\n\r\n  const onCloseModal = () => {\r\n    console.log(\"hi\");\r\n    setOpen((prev) => !prev);\r\n  };\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick={true}\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n      <Link ref={navRef} to=\"/reset-password\"></Link>\r\n      <div className=\"container h-100\">\r\n        <div className=\"row h-100 align-items-center justify-contain-center\">\r\n          <div className=\"col-xl-12\">\r\n            <div className=\"card\">\r\n              {open && (\r\n                <Modal\r\n                  onClose={onCloseModal}\r\n                  open={open}\r\n                  styles={{\r\n                    closeIcon: {\r\n                      position: \"absolute\",\r\n                      top: \"3%\",\r\n                      right: \"4%\",\r\n                    },\r\n                    modal: {\r\n                      zIndex: \"10001\",\r\n                      position: \"absolute\",\r\n                      top: \"50%\",\r\n                      left: \"50%\",\r\n                      transform: \"translate(-50%,-50%)\",\r\n                      maxWidth: \"unset\",\r\n                      minWidth: \"35%\",\r\n                      background: \"#fff\",\r\n                      padding: \"unset\",\r\n                      borderRadius: \"1rem\",\r\n                    },\r\n                    overlay: {\r\n                      background: \"rgba(0, 0, 0, 0.5)\",\r\n                    },\r\n                    closeButton: {\r\n                      background: \"white\",\r\n                    },\r\n                  }}\r\n                  center\r\n                >\r\n                  <div className=\"main p-5\">\r\n                    <div className=\"heading\">\r\n                      <h4>One time Password (OTP) verification</h4>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                      An OTP has been sent to your registered email address.\r\n                    </div>\r\n                    <div className=\"py-3\">\r\n                      <div className=\"form-group\">\r\n                        <div class=\"input-group mb-3\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"Email\"\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                          />\r\n                          <div class=\"input-group-append\">\r\n                            <button\r\n                              class=\"btn btn-outline-success\"\r\n                              type=\"button\"\r\n                              onClick={resend}\r\n                            >\r\n                              Submit\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"input-group mb-3\">\r\n                          <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"OTP\"\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            value={otp}\r\n                            onKeyUp={(e) => e.key == \"Enter\" && handleOtp(e)}\r\n                            onChange={(e) => setOtp(e.target.value)}\r\n                          />\r\n                          <div class=\"input-group-append\">\r\n                            <button\r\n                              class=\"btn btn-outline-success\"\r\n                              type=\"button\"\r\n                              onClick={handleOtp}\r\n                            >\r\n                              Submit\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        {/* <label htmlFor=\"otp\">Enter OTP</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"otp\"\r\n                          value={otp}\r\n                          onKeyUp={(e) => e.key == \"Enter\" && handleOtp(e)}\r\n                          onChange={(e) => setOtp(e.target.value)}\r\n                          id=\"otp\"\r\n                        /> */}\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          {/* <div className=\"\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"my-4 width-100 btn btn-primary\"\r\n                              onClick={handleOtp}\r\n                              // disabled={!timerValue.seconds >= 0 ? false : true}\r\n                            >\r\n                              Submit\r\n                            </button>\r\n                          </div> */}\r\n\r\n                          {/* <div className=\"mt-4\">\r\n                            {timerValue.seconds <= 0 ? (\r\n                              <>\r\n                                <span>Didn't recieve? </span>\r\n                                <a\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={resend}\r\n                                  className=\"text-primary mt-2 width-100\"\r\n                                >\r\n                                  Resend\r\n                                </a>\r\n                              </>\r\n                            ) : (\r\n                              <div className=\"my-4\">\r\n                                <h5>{timer}</h5>\r\n                              </div>\r\n                            )}\r\n                          </div> */}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Modal>\r\n              )}\r\n              <div className=\"card-body p-0\">\r\n                <div className=\"row m-0\">\r\n                  <div\r\n                    className=\"col-xl-6 col-md-6 sign text-center sign-bg\"\r\n                    style={{ backgroundImage: \"url(\" + pol + \")\" }}\r\n                  >\r\n                    <div>\r\n                      <div className=\"text-center my-5\">\r\n                        <Link to={\"#\"}>\r\n                          <img\r\n                            className=\"logo-abbr dark-logo\"\r\n                            width=\"200\"\r\n                            src={careLogo}\r\n                            alt=\"\"\r\n                          />\r\n                          {/* <img className=\"logo-abbr dark-logo\" width=\"200\" src={logo} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t      \t<img className=\"logo-abbr light-logo text-center m-auto\" width=\"200\" src={logolight} alt=\"\" /> */}\r\n                        </Link>\r\n                      </div>\r\n                      {dataTheme === \"light\" ? (\r\n                        <img\r\n                          src={BgImage}\r\n                          className=\"slideskew img-fix bitcoin-img\"\r\n                        />\r\n                      ) : (\r\n                        <img\r\n                          src={BgImage}\r\n                          className=\" slideskew img-fix bitcoin-img \"\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-xl-6 col-md-6\">\r\n                    <div className=\"sign-in-your px-2\">\r\n                      <h4 className=\"fs-20 mb-4\">Sign in your account</h4>\r\n                      <span>Welcome back! Login with your data </span>\r\n                      <div\r\n                        className=\"login-social\"\r\n                        style={{ marginBottom: \"3rem\" }}\r\n                      >\r\n                        {/* <Link to={\"#\"} className=\"btn btn-primary  d-block my-3\"><i className=\"fab fa-google me-2\"></i>Login with Google</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to={\"#\"} className=\"btn btn-secondary  d-block my-3\"><i className=\"fab fa-facebook-f me-2 facebook-log\"></i>Login with Facebook</Link> */}\r\n                      </div>\r\n                      {props.errorMessage && (\r\n                        <div className=\"bg-red-300 text-red-900 border border-red-900 p-1 my-2\">\r\n                          {props.errorMessage}\r\n                        </div>\r\n                      )}\r\n                      {props.successMessage && (\r\n                        <div className=\"bg-green-300 text-green-900 border border-green-900 p-1 my-2\">\r\n                          {props.successMessage}\r\n                        </div>\r\n                      )}\r\n                      <form onSubmit={onLogin}>\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"mb-1\">\r\n                            <strong>Email</strong>\r\n                          </label>\r\n                          <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            placeholder=\"Type Your Email Address\"\r\n                          />\r\n\r\n                          {errors.email && (\r\n                            <div className=\"text-danger fs-12\">\r\n                              {errors.email}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"mb-3\" style={{ position: \"relative\" }}>\r\n                          <label className=\"mb-1\">\r\n                            <strong>Password</strong>\r\n                          </label>\r\n                          <input\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            className=\"form-control\"\r\n                            value={password}\r\n                            placeholder=\"Type Your Password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            onClick={() => setShowPassword((prev) => !prev)}\r\n                          />\r\n                          <div\r\n                            id=\"pasToggle\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => setShowPassword((prev) => !prev)}\r\n                          >\r\n                            {\r\n                              <FaEye\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  top: \"37\",\r\n                                  right: \"10\",\r\n                                  font: \"1.3rem\",\r\n                                }}\r\n                              />\r\n                            }\r\n                          </div>\r\n                          {errors.password && (\r\n                            <div className=\"text-danger fs-12\">\r\n                              {errors.password}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"row d-flex justify-content-between mt-4 mb-2\">\r\n                          <div className=\"mb-3\"></div>\r\n\r\n                          <div className=\"form-group mb-3\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                              <label className=\"form-check-label\">\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  className=\"form-check-input\"\r\n                                  value={superAdmin}\r\n                                  onChange={(e) =>\r\n                                    setSuperAdmin((prev) => !prev)\r\n                                  }\r\n                                />\r\n                                Super-Admin\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"text-center mb-4 \">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary btn-block\"\r\n                          >\r\n                            Sign Me In\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"mb-3\" onClick={onOpenModal}>\r\n                          <span>Forgot Password</span>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    errorMessage: state.auth.errorMessage,\r\n    successMessage: state.auth.successMessage,\r\n    showLoading: state.auth.showLoading,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Login);\r\n"],"names":["hasPassiveEvents","window","passiveTestOptions","passive","addEventListener","removeEventListener","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","initialClientY","previousBodyOverflowSetting","previousBodyPaddingRight","allowTouchMove","el","some","lock","options","preventDefault","rawEvent","e","event","target","touches","length","restoreOverflowSetting","undefined","document","body","style","paddingRight","overflow","disableBodyScroll","targetElement","concat","arr","Array","isArray","i","arr2","from","_toConsumableArray","ontouchstart","targetTouches","clientY","ontouchmove","scrollTop","scrollHeight","clientHeight","isTargetElementTotallyScrolled","stopPropagation","handleScroll","_reserveScrollBarGap","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","setOverflowHidden","console","error","o","t","u","arguments","isStateful","n","c","f","current","r","Object","defineProperty","get","set","is","s","CloseIcon","_ref","classes","classNames","styles","id","closeIcon","onClick","React","className","cx","closeButton","width","height","viewBox","d","isBrowser","candidateSelectors","isHidden","node","offsetParent","getComputedStyle","visibility","isNotRadioOrTabbableRadio","tagName","type","name","radioSet","form","ownerDocument","querySelectorAll","checked","nodes","getCheckedRadio","getAllTabbingElements","parentElem","currentActiveElement","activeElement","tabbableNodes","join","onlyTabbable","disabled","getTabindex","push","tabindexAttr","parseInt","getAttribute","isNaN","isContentEditable","tabIndex","FocusTrap","container","initialFocusRef","refLastFocus","useRef","useEffect","handleKeyEvent","key","contains","process","allTabbingElements","firstFocusableElement","lastFocusableElement","shiftKey","focus","tabTrappingKey","savePreviousFocus","findIndex","selector","_document$activeEleme","matches","requestAnimationFrame","_initialFocusRef$curr","_refLastFocus$current","modals","modalManager","newModal","oldModal","filter","modal","useScrollLock","refModal","open","showPortal","blockScroll","oldRef","root","overlay","overlayAnimationIn","overlayAnimationOut","modalContainer","modalContainerCenter","modalAnimationIn","modalAnimationOut","ref","center","_ref$blockScroll","closeOnEsc","_ref$closeOnEsc","closeOnOverlayClick","_ref$closeOnOverlayCl","showCloseIcon","_ref$showCloseIcon","closeIconId","focusTrapped","_ref$focusTrapped","_ref$initialFocusRef","animationDuration","_ref$animationDuratio","role","_ref$role","ariaDescribedby","ariaLabelledby","containerId","modalId","onClose","onEscKeyDown","onOverlayClick","onAnimationEnd","children","refDialog","useForwardedRef","refShouldClose","refContainer","createElement","useState","_useState","setShowPortal","useModalManager","handleKeydown","keyCode","removeChild","appendChild","handleModalEvent","containerModal","overlayAnimation","_classNames$overlayAn","_classNames$overlayAn2","modalAnimation","_classNames$modalAnim","_classNames$modalAnim2","ReactDom","_extends","animation","onMouseDown","onMouseUp","connect","state","errorMessage","auth","successMessage","showLoading","props","navRef","activeSubmit","setActiveSubmit","errorsObj","email","password","errors","setErrors","setEmail","setPassword","superAdmin","setSuperAdmin","showPassword","setShowPassword","setOpen","otp","setOtp","timer","setTimer","dispatch","useDispatch","navigate","useNavigate","makeRequest","fetchData","timerValue","setTimerValue","seconds","handleOtp","persist","then","res","toast","localStorage","setItem","setTimeout","_navRef$current","click","catch","err","log","dataTheme","querySelector","_jsxs","_Fragment","_jsx","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Link","to","Modal","onCloseModal","prev","top","right","zIndex","left","transform","maxWidth","minWidth","background","padding","borderRadius","class","placeholder","value","onChange","success","data","onKeyUp","backgroundImage","pol","src","careLogo","alt","BgImage","marginBottom","onSubmit","errorObj","url","loadingToggleAction","loginAction","cursor","FaEye","font","onOpenModal"],"sourceRoot":""}