{"version":3,"file":"static/js/461.5f50a130.chunk.js","mappings":"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","sources":["jsx/components/Dashboard/Elements/SchoolOverView.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { Nav, Tab } from \"react-bootstrap\";\r\nimport fetchDate from \"../../../../axios/index\";\r\nimport { useEffect } from \"react\";\r\nconst chartHeaderData = [\r\n  // { title: \"day\", type: \"day\" },\r\n  // { title: \"Month\", type: \"month\" },0\r\n  // { title: \"Year\", type: \"year\" },\r\n];\r\n\r\nconst SchoolOverView = () => {\r\n  // const [durration, setDurration] = useState('week');\r\n  const chartRef = useRef();\r\n  const makeRequest = fetchDate();\r\n  const [purchaseList, setPurchaseList] = useState([]);\r\n  const [graphData, setGraphData] = useState([\r\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n  ]);\r\n  const [graphMonth, setGraphMonth] = useState([\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ]);\r\n  const series = [\r\n    {\r\n      name: \"Revenue\",\r\n      type: \"column\",\r\n      data: graphData || [],\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    makeRequest(\"GET\", \"/info/super-admin-dashboard-data\")\r\n      .then((res) => {\r\n        try {\r\n          setPurchaseList(res?.data?.response?.graph_data.reverse());\r\n          let data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n          let month = [\r\n            \"Jan\",\r\n            \"Feb\",\r\n            \"Mar\",\r\n            \"Apr\",\r\n            \"May\",\r\n            \"Jun\",\r\n            \"Jul\",\r\n            \"Aug\",\r\n            \"Sep\",\r\n            \"Oct\",\r\n            \"Nov\",\r\n            \"Dec\",\r\n          ];\r\n          let graph_data = res?.data?.response?.graph_data?.reverse()?.slice(0, 12);\r\n          graph_data?.map((item, i) => {\r\n            data[item.month_number - 1] = parseInt(item?.total_purchases);\r\n            });\r\n          setGraphData(data);\r\n          setGraphMonth(month);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const options = {\r\n    chart: {\r\n      height: 300,\r\n      type: \"line\",\r\n      stacked: false,\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n    },\r\n\r\n    stroke: {\r\n      width: [0, 1, 1],\r\n      curve: \"straight\",\r\n      dashArray: [0, 0, 5],\r\n    },\r\n    legend: {\r\n      fontSize: \"13px\",\r\n      fontFamily: \"poppins\",\r\n      labels: {\r\n        colors: \"#888888\",\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: \"18%\",\r\n        borderRadius: 3,\r\n      },\r\n    },\r\n    fill: {\r\n      type: \"gradient\",\r\n      gradient: {\r\n        inverseColors: false,\r\n        shade: \"light\",\r\n        type: \"vertical\",\r\n        colorStops: [\r\n          [\r\n            {\r\n              offset: 0,\r\n              color: \"var(--primary)\",\r\n              opacity: 1,\r\n            },\r\n            {\r\n              offset: 100,\r\n              color: \"var(--primary)\",\r\n              opacity: 1,\r\n            },\r\n          ],\r\n          [\r\n            {\r\n              offset: 0,\r\n              color: \"#3AC977\",\r\n              opacity: 1,\r\n            },\r\n            {\r\n              offset: 0.4,\r\n              color: \"#3AC977\",\r\n              opacity: 0.15,\r\n            },\r\n            {\r\n              offset: 100,\r\n              color: \"#3AC977\",\r\n              opacity: 0,\r\n            },\r\n          ],\r\n          [\r\n            {\r\n              offset: 0,\r\n              color: \"#FF5E5E\",\r\n              opacity: 1,\r\n            },\r\n            {\r\n              offset: 100,\r\n              color: \"#FF5E5E\",\r\n              opacity: 1,\r\n            },\r\n          ],\r\n        ],\r\n        stops: [0, 100, 100, 100],\r\n      },\r\n    },\r\n    colors: [\"var(--primary)\", \"#3AC977\", \"#FF5E5E\"],\r\n    labels: graphMonth || [],\r\n    markers: {\r\n      size: 0,\r\n    },\r\n    xaxis: {\r\n      type: \"month\",\r\n      labels: {\r\n        style: {\r\n          fontSize: \"13px\",\r\n          colors: \"#888888\",\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      min: 0,\r\n      tickAmount: 4,\r\n      labels: {\r\n        style: {\r\n          fontSize: \"13px\",\r\n          colors: \"#888888\",\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false,\r\n      y: {\r\n        formatter: function (y) {\r\n          if (typeof y !== \"undefined\") {\r\n            return y.toFixed(0) + \" Pounds\";\r\n          }\r\n          return y;\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const dataSeries = (seriesType) => {\r\n    var columnData = [];\r\n    var areaData = [];\r\n    var lineData = [];\r\n    switch (seriesType) {\r\n      case \"week\":\r\n        columnData = [75, 85, 72, 100, 50, 100, 80, 75, 95, 35, 75, 100];\r\n        areaData = [44, 65, 55, 75, 45, 55, 40, 60, 75, 45, 50, 42];\r\n        lineData = [30, 25, 45, 30, 25, 35, 20, 45, 35, 20, 35, 20];\r\n        break;\r\n      case \"month\":\r\n        columnData = [20, 50, 80, 52, 10, 80, 50, 30, 90, 10, 60, 85];\r\n        areaData = [40, 25, 85, 45, 85, 25, 95, 65, 45, 45, 20, 12];\r\n        lineData = [65, 45, 25, 65, 45, 25, 75, 35, 65, 75, 15, 65];\r\n        break;\r\n      case \"year\":\r\n        columnData = [30, 20, 80, 52, 10, 90, 50, 30, 75, 20, 60, 85];\r\n        areaData = [40, 25, 40, 45, 85, 25, 50, 65, 45, 60, 20, 12];\r\n        lineData = [65, 45, 30, 65, 45, 25, 75, 40, 65, 50, 15, 65];\r\n        break;\r\n      case \"all\":\r\n        columnData = [20, 50, 80, 60, 10, 80, 50, 40, 85, 20, 60, 85];\r\n        areaData = [40, 25, 30, 45, 85, 25, 95, 65, 50, 45, 20, 12];\r\n        lineData = [65, 45, 25, 65, 45, 25, 30, 35, 65, 75, 15, 65];\r\n        break;\r\n      default:\r\n        columnData = [75, 80, 72, 100, 50, 100, 80, 30, 95, 35, 75, 100];\r\n        areaData = [44, 65, 55, 75, 45, 55, 40, 60, 75, 45, 50, 42];\r\n        lineData = [30, 25, 45, 30, 25, 35, 20, 45, 35, 30, 35, 20];\r\n    }\r\n    chartRef.current.chart.ctx.updateSeries([\r\n      {\r\n        name: \"Number of Projects\",\r\n        type: \"column\",\r\n        data: columnData,\r\n      },\r\n      {\r\n        name: \"Revenue\",\r\n        type: \"area\",\r\n        data: areaData,\r\n      },\r\n      {\r\n        name: \"Active Projects\",\r\n        type: \"line\",\r\n        data: lineData,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tab.Container defaultActiveKey={\"Week\"}>\r\n        <div className=\"card-header border-0 pb-0 flex-wrap\">\r\n          <h4 className=\"heading mb-0\">Revenue {new Date().getFullYear()}</h4>\r\n          <Nav as=\"ul\" className=\"nav nav-pills mix-chart-tab\">\r\n            {chartHeaderData?.map((item, index) => (\r\n              <Nav.Item as=\"li\" className=\"nav-item\" key={index}>\r\n                <Nav.Link\r\n                  eventKey={item?.title}\r\n                  onClick={() => dataSeries(item?.type)}\r\n                >\r\n                  {item?.title}\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            ))}\r\n          </Nav>\r\n        </div>\r\n        <div className=\"card-body  p-0\">\r\n          <div id=\"overiewChart\">\r\n            <ReactApexChart\r\n              options={options}\r\n              series={series}\r\n              ref={chartRef}\r\n              type=\"line\"\r\n              height={300}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Tab.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SchoolOverView;\r\n"],"names":["chartHeaderData","SchoolOverView","chartRef","useRef","makeRequest","fetchDate","purchaseList","setPurchaseList","useState","graphData","setGraphData","graphMonth","setGraphMonth","series","name","type","data","useEffect","then","res","_res$data","_res$data$response","_res$data2","_res$data2$response","_res$data2$response$g","_res$data2$response$g2","response","graph_data","reverse","month","slice","map","item","i","month_number","parseInt","total_purchases","error","console","log","catch","err","options","chart","height","stacked","toolbar","show","stroke","width","curve","dashArray","legend","fontSize","fontFamily","labels","colors","plotOptions","bar","columnWidth","borderRadius","fill","gradient","inverseColors","shade","colorStops","offset","color","opacity","stops","markers","size","xaxis","style","yaxis","min","tickAmount","tooltip","shared","intersect","y","formatter","toFixed","_jsx","_Fragment","children","_jsxs","Tab","Container","defaultActiveKey","className","Date","getFullYear","Nav","as","index","Item","Link","eventKey","title","onClick","seriesType","columnData","areaData","lineData","current","ctx","updateSeries","dataSeries","id","ReactApexChart","ref"],"sourceRoot":""}